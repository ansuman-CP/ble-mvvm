apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$rootDir/dependencies.gradle"
apply plugin: 'com.novoda.static-analysis'
apply plugin: 'io.gitlab.arturbosch.detekt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ebdz.ble"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.ebdz.ble.TestInstrumentationRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    configurations.all {
        exclude module: 'commons-logging'

        resolutionStrategy {
            force "com.android.support:support-annotations:$support_version"
            force "com.android.support:support-v4:$support_version"
        }
    }
}


androidExtensions {
    experimental = true
}

detekt {
    profile = 'main'

    profile('main') {
        input = "$projectDir/src/main/java"
        config = teamPropsFile('static-analysis/detekt-config.yml')
        filters = '.*test.*,.*/resources/.*,.*/tmp/.*'
        output = "$projectDir/build/reports/detekt"
    }

    idea {
        path = "$rootDir/.idea"
        codeStyleScheme = "$rootDir/.idea/codeStyles/Project.xml"
        inspectionsProfile = "$rootDir/.idea/inspectionProfiles/Squanchy.xml"
        report = "$projectDir/build/reports/detekt-idea"
        mask = "*.kt,"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support.test:runner:$androidTestRunner_version"
    androidTestImplementation "com.android.support.test:rules:$androidTestRules_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"

    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"

    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "junit:junit:$junit_version"

    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "android.arch.lifecycle:extensions:$archLifecycleVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.jakewharton:butterknife:$butterknife_version"
    kapt "com.jakewharton:butterknife-compiler:$butterknife_version"
    implementation "io.reactivex.rxjava2:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation "com.jakewharton.rxrelay2:rxrelay:$rx_relay_version"
    implementation "com.polidea.rxandroidble2:rxandroidble:$rx_androidble2"
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    implementation "com.github.matecode:Snacky:$snacky_version"

    implementation("com.google.dagger:dagger:$dagger_version",
            "com.google.dagger:dagger-android:$dagger_version",
            "com.google.dagger:dagger-android-support:$dagger_version"
    )
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
}